name: Transformer Images

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

jobs:
  transformer-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERPUBLICBOT_USERNAME }}
          password: ${{ secrets.DOCKERPUBLICBOT_WRITE_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker/compose-bridge-transformer
          tags: |
            type=ref,event=tag
            type=edge
            type=ref,event=pr
          bake-target: meta-helper
      - name: Build and push image
        uses: docker/bake-action@v6
        id: bake
        with:
          source: .
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: transformer_all
          push: ${{ github.event_name != 'pull_request' }}
          sbom: true
          provenance: mode=max
          set: |
            *.cache-from=type=gha,scope=transformer-images
            *.cache-to=type=gha,scope=transformer-images,mode=max
  kubernetes-image:
    runs-on: ubuntu-latest
    needs:
      - transformer-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERPUBLICBOT_USERNAME }}
          password: ${{ secrets.DOCKERPUBLICBOT_WRITE_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker/compose-bridge-kubernetes
          tags: |
            type=ref,event=tag
            type=edge
            type=ref,event=pr
          bake-target: meta-helper
      - name: Build and push image
        uses: docker/bake-action@v6
        id: bake
        with:
          source: .
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: kubernetes_all
          push: ${{ github.event_name != 'pull_request' }}
          sbom: true
          provenance: mode=max
          set: |
            *.cache-from=type=gha,scope=transformer-images
            *.cache-to=type=gha,scope=transformer-images,mode=max
  helm-image:
    runs-on: ubuntu-latest
    needs:
      - transformer-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERPUBLICBOT_USERNAME }}
          password: ${{ secrets.DOCKERPUBLICBOT_WRITE_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker/compose-bridge-helm
          tags: |
            type=ref,event=tag
            type=edge
            type=ref,event=pr
          bake-target: meta-helper
      - name: Build and push image
        uses: docker/bake-action@v6
        id: bake
        with:
          source: .
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: helm_all
          push: ${{ github.event_name != 'pull_request' }}
          sbom: true
          provenance: mode=max
          set: |
            *.cache-from=type=gha,scope=transformer-images
            *.cache-to=type=gha,scope=transformer-images,mode=max

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # for release-action
    steps:
      -
        name: GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: ncipollo/release-action@v1.16.0
        with:
          generateReleaseNotes: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
